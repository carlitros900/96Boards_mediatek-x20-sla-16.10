/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2015. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 */

#ifndef __DRAMC_H__
#define __DRAMC_H__
#include<mt_reg_base.h>

#define DRAMCAO_CHA_BASE_ADDR       0xA0004000
#define DRAMCAO_CHB_BASE_ADDR       0xA0013000
#define DRAMCNAO_CHA_BASE_ADDR      0xA020e000
#define DRAMCNAO_CHB_BASE_ADDR      0xA0216000
/* #define DDRPHY_REG_BASE             0xA000f000
#define TOPCKGEN_BASE_ADDR          0xA0000000 */
#define INFRACFG_AO_BASE_ADDR       0xA0001000
#define SCP_SYS_BASE_ADDR       0x400ac000
#define MAX_SIZE 24

typedef enum {
    DRAM_OK = 0,
    DRAM_FAIL
} DRAM_STATUS_TYPE; /* DRAM status type */

typedef struct {
    uint8_t id[4];
    uint32_t buffer_index;
    uint8_t freq_idx[MAX_SIZE];
    uint16_t loop_count[MAX_SIZE];
    uint16_t error_flag[4][4];
    uint32_t first_tracking_value[3][2][2][2]; //first tracking value for 3 frequency
    uint32_t tracking_value[MAX_SIZE-3][2][2][2];
} DRAMC_DEBUG_INFO_T;

#endif  /* !__DRAMC_H__ */
